name: QR Code API CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  ADMIN_USER: ${{ secrets.ADMIN_USER }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
  SERVER_BASE_URL: "http://localhost:8000"
  SERVER_DOWNLOAD_FOLDER: "downloads"
  QR_DIRECTORY: "qr_codes"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create directories
      run: |
        mkdir -p qr_codes
        mkdir -p downloads
    
    - name: Run tests
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY || 'test-secret-key' }}
        ADMIN_USER: ${{ secrets.ADMIN_USER || 'admin' }}
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD || 'admin123' }}
        SERVER_BASE_URL: "http://localhost:8000"
        SERVER_DOWNLOAD_FOLDER: "downloads"
        QR_DIRECTORY: "qr_codes"
      run: |
        pytest tests/ -v

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.sha }}
