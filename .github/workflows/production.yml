name: QR Code API CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  ADMIN_USER: ${{ secrets.ADMIN_USER }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
  SERVER_BASE_URL: "http://localhost:8000"
  SERVER_DOWNLOAD_FOLDER: "downloads"
  QR_DIRECTORY: "qr_codes"

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
        cache: 'pip'
    
    - name: Cache Python packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Create QR codes directory
      run: |
        mkdir -p qr_codes
        mkdir -p downloads
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Setup environment
      run: |
        echo "SECRET_KEY=${{ secrets.SECRET_KEY || 'test-secret-key' }}" >> $GITHUB_ENV
        echo "ADMIN_USER=${{ secrets.ADMIN_USER || 'admin' }}" >> $GITHUB_ENV
        echo "ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD || 'admin123' }}" >> $GITHUB_ENV
        echo "SERVER_BASE_URL=http://localhost:8000" >> $GITHUB_ENV
        echo "SERVER_DOWNLOAD_FOLDER=downloads" >> $GITHUB_ENV
        echo "QR_DIRECTORY=qr_codes" >> $GITHUB_ENV
    
    - name: Run tests with Pytest
      run: |
        pytest tests/ -v

  build-and-push-docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/qrcode-api:${{ github.sha }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/qrcode-api:cache
        cache-to: type=inline,mode=max
          
    - name: Scan the Docker image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/qrcode-api:${{ github.sha }}'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'